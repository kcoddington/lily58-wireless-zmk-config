/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp TAB>;
            label = "ALT_TAB";
        };

        ctrl_tab: ctrl_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp TAB>;
            label = "CTRL_TAB";
        };

        super_tab: super_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_GUI &kp TAB>;
            label = "SUPER_TAB";
        };

        caps_lk: caps_lk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 200>, <&kp CAPSLOCK>;

            label = "CAPS_LK";
        };

        hyper: hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LSHIFT &kp LALT &kp LGUI>;
            label = "HYPER";
        };

        meh: meh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LSHIFT &kp LALT>;
            label = "MEH";
        };
    };

    behaviors {
        hrm_lh: hrm_lh {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 35 34 48 47 44 45 46 56 54 57>;
        };

        hmr_rh: hmr_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_RH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <1 1 2 3 4 5 12 13 17 25 26 27 28 29 36 37 38 39 40 41 14 15 16 42 52>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&hrm_lh LEFT_ALT ESCAPE  &kp N1  &kp N2  &kp N3  &kp N4            &kp N5                                        &kp N6     &kp N7           &kp N8     &kp N9      &kp N0     &hmr_rh RALT MINUS
&hrm_lh LGUI TAB         &kp Q   &kp W   &kp E   &kp R             &kp T                                         &kp Y      &kp U            &kp I      &kp O       &kp P      &hmr_rh RGUI EQUAL
&mt LSHIFT CAPSLOCK      &kp A   &kp S   &kp D   &kp F             &kp G                                         &kp H      &kp J            &kp K      &kp L       &kp SEMI   &hmr_rh RSHIFT SQT
&kp LCTRL                &kp Z   &kp X   &kp C   &kp V             &kp B       &lt 1 GRAVE    &lt 1 PRINTSCREEN  &kp N      &kp M            &kp COMMA  &kp PERIOD  &kp SLASH  &kp RCTRL
                                         &meh    &lt 2 SCROLLLOCK  &kp DELETE  &kp ENTER      &kp BACKSPACE      &kp SPACE  &lt 3 BACKSLASH  &hyper
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &trans                &trans                                          &trans          &trans          &trans        &trans           &trans      &trans
&trans  &kp F4   &kp F5   &kp F6   &kp LEFT_BRACKET      &kp RIGHT_BRACKET                               &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &kp INSERT  &trans
&trans  &kp F7   &kp F8   &kp F9   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans      &trans
&trans  &kp F10  &kp F11  &kp F12  &kp LEFT_BRACE        &kp RIGHT_BRACE        &ctrl_tab    &super_tab  &trans          &trans          &trans        &trans           &trans      &trans
                          &trans   &trans                &trans                 &trans       &trans      &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N7  &kp N8  &kp N9      &kp SLASH     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N4  &kp N5  &kp N6      &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N1  &kp N2  &kp N3      &kp MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N0  &trans  &kp PERIOD  &kp PLUS      &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        media_bt {
            bindings = <
&trans  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))  &trans  &trans        &trans                          &trans      &trans             &trans           &trans  &trans  &trans
&trans  &trans                  &trans                   &trans  &out OUT_USB  &bt BT_SEL 0                    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans
&trans  &trans                  &trans                   &trans  &out OUT_BLE  &bt BT_SEL 1                    &kp C_PREV  &kp C_PP           &kp C_NEXT       &trans  &trans  &trans
&trans  &trans                  &trans                   &trans  &bt BT_CLR    &bt BT_SEL 2  &trans    &trans  &trans      &trans             &trans           &trans  &trans  &trans
                                                         &trans  &trans        &trans        &trans    &trans  &trans      &trans             &trans
            >;
        };
    };
};
