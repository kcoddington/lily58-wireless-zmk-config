/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp TAB>;
            label = "ALT_TAB";
        };

        ctrl_tab: ctrl_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp TAB>;
            label = "CTRL_TAB";
        };

        super_tab: super_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_GUI &kp TAB>;
            label = "SUPER_TAB";
        };
    };

    behaviors {
        td_shft_caps: td_shft_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };

        my_mod_tap: my_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_MOD_TAP";
            bindings = <&mt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <240>;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESCAPE      &kp N1                &kp N2              &kp N3              &kp N4   &kp N5                                  &kp N6     &kp N7         &kp N8                  &kp N9                   &kp N0                    &kp MINUS
&kp TAB         &kp Q                 &kp W               &kp E               &kp R    &kp T                                   &kp Y      &kp U          &kp I                   &kp O                    &kp P                     &kp EQUAL
&lt 2 CAPSLOCK  &kp A                 &kp S               &kp D               &kp F    &kp G                                   &kp H      &kp J          &kp K                   &kp L                    &kp SEMI                  &kp SQT
&kp LCTRL       &my_mod_tap LSHIFT Z  &my_mod_tap LALT X  &my_mod_tap LGUI C  &lt 1 V  &kp B       &kp GRAVE    &alt_tab       &kp N      &lt 1 M        &my_mod_tap RGUI COMMA  &my_mod_tap RALT PERIOD  &my_mod_tap RSHIFT SLASH  &kp RCTRL
                                                          &kp SCROLLLOCK      &sl 3    &kp DELETE  &kp ENTER    &kp BACKSPACE  &kp SPACE  &kp BACKSLASH  &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &trans                &trans                                          &trans          &trans          &trans        &trans           &trans      &trans
&trans  &kp F4   &kp F5   &kp F6   &kp LEFT_BRACKET      &kp RIGHT_BRACKET                               &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &kp INSERT  &trans
&trans  &kp F7   &kp F8   &kp F9   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans      &trans
&trans  &kp F10  &kp F11  &kp F12  &kp LEFT_BRACE        &kp RIGHT_BRACE        &ctrl_tab    &super_tab  &trans          &trans          &trans        &trans           &trans      &trans
                          &trans   &trans                &trans                 &trans       &trans      &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N7  &kp N8  &kp N9      &kp SLASH     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N4  &kp N5  &kp N6      &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N1  &kp N2  &kp N3      &kp MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N0  &trans  &kp PERIOD  &kp PLUS      &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        media_bt {
            bindings = <
&trans  &trans  &trans  &trans  &trans        &trans                          &trans      &trans             &trans           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &out OUT_TOG  &bt BT_SEL 0                    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &bt BT_CLR    &bt BT_SEL 1                    &kp C_PREV  &kp C_PP           &kp C_NEXT       &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &bt BT_SEL 2  &trans    &trans  &trans      &trans             &trans           &trans  &trans  &trans
                        &trans  &trans        &trans        &trans    &trans  &trans      &trans             &trans
            >;
        };
    };
};
